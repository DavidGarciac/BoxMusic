{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/albums/albums.component.ts","webpack:///src/app/components/albums/albums.component.html","webpack:///src/app/components/artist/artist.component.ts","webpack:///src/app/components/artist/artist.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/search/search-albums.component.ts","webpack:///src/app/components/search/search-all.component.ts","webpack:///src/app/components/search/search-artists.component.ts","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/components/searchalbum/searchalbum.component.ts","webpack:///src/app/components/searchalbum/searchalbum.component.html","webpack:///src/app/components/searchartist/searchartist.component.ts","webpack:///src/app/components/searchartist/searchartist.component.html","webpack:///src/app/components/shared/cards/cards.component.ts","webpack:///src/app/components/shared/cards/cards.component.html","webpack:///src/app/components/shared/loading/loading.component.ts","webpack:///src/app/components/shared/loading/loading.component.html","webpack:///src/app/components/shared/navbar/navbar.component.ts","webpack:///src/app/components/shared/navbar/navbar.component.html","webpack:///src/app/components/shared/navbarsearch/navbarsearch.component.ts","webpack:///src/app/components/shared/navbarsearch/navbarsearch.component.html","webpack:///src/app/components/star-review/star-review.component.ts","webpack:///src/app/components/star-review/star-review.component.html","webpack:///src/app/driectives/ng-drop-files.directive.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/file-item.model.ts","webpack:///src/app/models/usuario.model.ts","webpack:///src/app/pipes/domseguro.pipe.ts","webpack:///src/app/pipes/noimage.pipe.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/spotify.service.ts","webpack:///src/app/services/star.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","imports","providers","bootstrap","APP_ROUTES","path","component","canActivate","redirectTo","APP_ROUTING","forRoot","AppRoutingModule","AlbumsComponent","spotify","starService","auth","rout","router","afs","canciones","album","usu","dur","min","sec","coments","bucle","p","collection","params","subscribe","getTracks","getUserfirebase","localStorage","getItem","user","getDuration","getAlbumTracks","data","tracks","items","console","log","getAllStarAlbum","name","res","outerHtmlElement","duracion","forEach","myObject","index","duration_ms","Math","floor","ArtistComponent","nav","artista","topTracks","Albums","Singles","getAlbums","getSingles","getArtista","getTopTracks","item","artistaId","idAlbum","type","navigate","artists","getAlbumsArtista","getSinglesArtista","HomeComponent","nuevasCanciones","getNewReleases","ServiceError","JSON","stringify","currentusu","verAlbum","LoginComponent","loginGoogle","navigateByUrl","catch","err","form","invalid","fire","allowOutsideClick","text","icon","showLoading","login","resp","close","error","message","titleText","loginn","ProfileComponent","starservice","aut","recentactivity","archivos","estasobreDrop","urlimg","photo","getRecentStars","nombre","recent","updateUserData","imagen","saveimg","showConfirmButton","edit","uploadImg","RegisterComponent","newUser","timer","onSubmit","SearchAlbumsComponent","albums","loading","parent","termino","template","styles","SearchAllComponent","sear","artistas","buscarAlbum","buscarArtist","getArtistas","SearchArtistsComponent","search","SearchComponent","activatedRoute","SearchalbumComponent","SearchartistComponent","CardsComponent","items2","collections","Paginador","col","paginas","ceil","itemslenght","i","a","pag","LoadingComponent","NavbarComponent","spoti","isLogged","isAuth","logout_","clear","buscar","signout","NavbarsearchComponent","StarReviewComponent","stars","selectedValue","color","value","getUserAlbumStarr","iduser","idalbum","val","textValue","coment","contador","values","doc","usersrating","star","setStar","setReview","ngOnInit","document","getElementById","click","SaveComent","NgDropFilesDirective","mouseSobre","event","emit","_prevenirDetener","transferencia","_getTransferencia","files","_extraerArchivos","dataTransfer","originalEvent","img","propiedad","Object","getOwnPropertyNames","archivoTemporal","_archivoPuedeSerCargado","nuevoArchivo","archivo","_archivoyadroppeado","_esImagen","preventDefault","stopPropagation","nombreArchivo","imag","tipoArchivo","undefined","startsWith","AuthGuard","estaAutenticado","providedIn","FileItem","UsuarioModel","DomseguroPipe","domSanitizer","url","bypassSecurityTrustResourceUrl","NoimagePipe","images","length","AuthService","afAuth","http","apikey","curl","CARPETA_IMAGENES","leerToken","getCurrentUserio","usersCollection","users","valueChanges","imagenes","usucurrent","uid","storageRef","ref","uploadTask","child","put","on","TaskEvent","STATE_CHANGED","snapshot","progreso","bytesTransferred","totalBytes","getDownloadURL","downloadURL","imageUrl","guardarImage","image","starsRef","update","where","usuario","authData","returnSecureToken","signInWithEmailAndPassword","email","password","post","pipe","guardarToken","signInWithRedirect","GoogleAuthProvider","PostUser","provider","signInWithPopup","credential","signOut","removeItem","idToken","localId","userToken","setItem","hoy","Date","setSeconds","getTime","toString","expira","Number","expiraDate","setTime","authState","onAuthStateChanged","displayName","emailVerified","photoURL","isAnonymous","providerData","SpotifyService","obtenerToken","clientId","clientSecret","urrl","get","tooken","access_token","query","headers","getQuery","StarService","fecha","userId","albumId","orderBy","limit","date","starPath","set","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'boxmusic';\n}\n","<!-- Toolbar -->\n<app-navbar></app-navbar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n//IMPORTS\nimport { RatingModule } from 'ng-starrating';\nimport {NgxPaginationModule} from 'ngx-pagination'; // <-- import the module\n\nimport {APP_ROUTING} from './app.routes';\n//PIPES\nimport { NoimagePipe } from './pipes/noimage.pipe';\nimport { DomseguroPipe } from './pipes/domseguro.pipe';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { CardsComponent } from './components/shared/cards/cards.component';\n\n\n// FIREBASE\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule, AngularFirestore} from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\n// Services\nimport { SpotifyService } from './services/spotify.service';\nimport { AlbumsComponent } from './components/albums/albums.component';\nimport { ArtistComponent } from './components/artist/artist.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { LoadingComponent } from './components/shared/loading/loading.component';\nimport { SearchAlbumsComponent } from './components/search/search-albums.component';\nimport { SearchArtistsComponent } from './components/search/search-artists.component';\nimport { SearchAllComponent } from './components/search/search-all.component';\nimport { NavbarsearchComponent } from './components/shared/navbarsearch/navbarsearch.component';\nimport { SearchalbumComponent } from './components/searchalbum/searchalbum.component';\nimport { SearchartistComponent } from './components/searchartist/searchartist.component';\nimport { StarReviewComponent } from './components/star-review/star-review.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { NgDropFilesDirective } from './driectives/ng-drop-files.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NoimagePipe,\n    DomseguroPipe,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    CardsComponent,\n    AlbumsComponent,\n    ArtistComponent,\n    SearchComponent,\n    LoadingComponent,\n    SearchAlbumsComponent,\n    SearchArtistsComponent,\n    SearchAllComponent,\n    NavbarsearchComponent,\n    SearchalbumComponent,\n    SearchartistComponent,\n    StarReviewComponent,\n    ProfileComponent,\n    NgDropFilesDirective,\n\n  ],\n  imports: [\n    BrowserModule, \n    NgxPaginationModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule,\n    FormsModule,\n    HttpClientModule,\n    RatingModule ,\n    APP_ROUTING\n  ],\n  providers: [\n    SpotifyService,AngularFirestore\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AlbumsComponent } from './components/albums/albums.component';\r\nimport { ArtistComponent } from './components/artist/artist.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { SearchAlbumsComponent } from './components/search/search-albums.component';\r\nimport { SearchArtistsComponent } from './components/search/search-artists.component';\r\nimport { SearchAllComponent } from './components/search/search-all.component';\r\nimport { SearchalbumComponent } from './components/searchalbum/searchalbum.component';\r\nimport { SearchartistComponent } from './components/searchartist/searchartist.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\n\r\n\r\nconst APP_ROUTES: Routes = [\r\n    {path: 'home' , component: HomeComponent, canActivate: [ AuthGuard]},\r\n    {path: 'profile' , component: ProfileComponent, canActivate: [ AuthGuard]},\r\n    { path: 'login'   , component: LoginComponent },\r\n    { path: 'register'   , component: RegisterComponent },\r\n    { path: 'albums/:id', component: AlbumsComponent},\r\n    {path: 'artist/:id', component: ArtistComponent},\r\n    // {path: 'buscador', component: BuscadorComponent},\r\n\r\n    {path:'searchalbums/:termino', component: SearchalbumComponent},\r\n    {path:'searchartists/:termino', component: SearchartistComponent},\r\n\r\n    {\r\n        path: 'search/:termino', \r\n        component: SearchComponent,canActivate: [ AuthGuard],\r\n        // children: [\r\n        //     {path:'all', component: SearchAllComponent},\r\n        //     {path:'albums', component: SearchalbumComponent},\r\n        //     {path:'artists', component: SearchArtistsComponent},\r\n        // ]\r\n    },\r\n\r\n    // {path: ' ', pathMatch: 'full', redirectTo: 'home'},\r\n     {path: '**', redirectTo: 'login'}\r\n];\r\n\r\n\r\nexport const APP_ROUTING = RouterModule.forRoot(APP_ROUTES);\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AngularFirestoreDocument, AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { StarService } from '../../services/star.service';\n\n@Component({\n  selector: 'app-albums',\n  templateUrl: './albums.component.html',\n})\nexport class AlbumsComponent implements OnInit {\n\n  canciones: any = {};\n  album: any = {};\n  usu: any = {};\n  albumDoc: AngularFirestoreDocument<any>;\n  dur = {min: 0, sec: 0}\n  Album: Observable<any>;\n  value: any; //RATING DE ESTRELLAS A UN ALBUM\n  public coments = []; //COMENTS DEL ALBUM\n  bucle: number[] = [0, 1, 2, 3, 4];\n  p: number = 1;\n  collection: any[] = ['Apple', 'Orange', 'Banana']; \n  constructor(private spotify: SpotifyService,private starService: StarService,private auth: AuthService, private rout: Router, private router: ActivatedRoute, private afs: AngularFirestore) { \n  }\n  ngOnInit(): void {\n    this.router.params.subscribe( params => {\n      this.getTracks(params['id']);\n      // this.albumDoc = this.afs.doc(params['id']);\n    });\n    this.auth.getUserfirebase( localStorage.getItem('uid')).subscribe(user => {\n    this.usu = user;\n});\n    // this.Album = this.albumDoc.valueChanges();\n    // console.log(\"RESPUESTAaa\");\n   \n\n  }\n\n  ngAfterViewInit(){\n    this.getDuration();\n  }\n\n  getTracks(id: string){\n    // this.loading = true;\n    this.spotify.getAlbumTracks(id)\n    .subscribe( data => {\n      this.album = data;\n      this.canciones = data[0].tracks.items;\n      console.log(data);\n      console.log(this.canciones);\n      this.starService.getAllStarAlbum(this.album[0].name).subscribe(res =>{\n        console.log(\"RESPUESTA \"+ res);\n        // res.forEach(doc => { });\n        this.coments = res;\n        var outerHtmlElement: any = res;\n         console.log(outerHtmlElement[4])\n  \n       });\n    })\n\n   \n  }\n  getDuration(){\n    let duracion: number = 5555;\n    this.canciones.forEach( (myObject, index) => {\n      duracion =  duracion + myObject.duration_ms;\n    });\n    let min = Math.floor((duracion / 1000 / 60) << 0), sec = Math.floor((duracion / 1000) % 60);\n    this.dur.min = min;\n    this.dur.sec = sec;\n  }\n\n\n\n\n}\n","<br>\n\n<!-- Page Content -->\n<div class=\"container\">\n    <div class=\"row\">\n        <!-- Blog Entries Column -->\n        <div class=\"col-md-3\">\n            <!-- Blog Post -->\n            <div *ngIf=\"album\" class=\"card mb-3\">\n                <img [src]=\"album[0].images | noimage\" class=\"img-thumbnail  \">\n                <div class=\"card-body\">\n                    <div *ngIf=\"album[0]\">\n                        <h3 class=\"card-title\" *ngIf=\"album[0].name != 'undefined' \">{{album[0].name}}\n                            <small class=\" font-italic\"> <a>by   </a> <a [routerLink]=\"['/artist', album[0].artists[0].id]\"  >  {{album[0].artists[0].name}}</a> </small>\n                        </h3>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-12 \">\n                            <ul class=\"list-unstyled mb-0\">\n                                <li>\n                                    <a>{{album[0].release_date}}</a> <a class=\"text-black-50\"> - Release Date  </a>\n                                </li>\n                                <li>\n                                    <a>{{album[0].label}}</a><a class=\"text-black-50\"> - Label</a>\n                                </li>\n                                <li>\n                                    <a>{{album[0].album_type}}</a> <a class=\"text-black-50\"> - Format</a>\n                                </li>\n                                <li>\n                                    <a>{{dur.min}}:{{dur.sec}}</a><a class=\"text-black-50\"> - Length</a>\n                                </li>\n                            </ul>\n                        </div>\n\n                    </div>\n\n                    <div class=\"row col-2\">\n                        <a [href]=\"album[0].external_urls.spotify\">\n                            <button type=\"button\" class=\"btn btn-success\"><i class=\"fab fa-spotify\"></i></button>\n                        </a>\n                    </div>\n                </div>\n                <div *ngIf=\"album\" class=\"card-footer text-muted\">\n                    <i class=\"fa fa-copyright\" aria-hidden=\"true\"></i> {{album[0].copyrights[0].text}}\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"col-md-6\">\n            <!-- STARS REVIEW -->\n            <div *ngIf=\"album[0]\">\n                <app-star-review *ngIf=\"album[0].imagesl != 'undefined'\" [portada]=\"album[0].images\" [idalbum]=\"[album[0].name]\" [iduser]=\"[usu[0].nombre]\"></app-star-review>\n            </div>\n\n            <br>\n            <div>\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\" *ngFor=\"let com of coments | paginate: { itemsPerPage: 3, currentPage: p }; let i = index\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2\">\n                                        <img src=\"https://image.ibb.co/jw55Ex/def_face.jpg\" class=\"img img-rounded img-fluid\" />\n                                        <!-- <p class=\"text-secondary text-center\">{{com.date}}</p> -->\n                                    </div>\n                                    <div class=\"col-md-10\">\n                                        <p>\n                                            <a class=\"float-left\" href=\"https://maniruzzaman-akash.blogspot.com/p/contact.html\"><strong>{{com.userId}}</strong></a>\n                                            <!-- <span class=\"badge badge-light float-right\">{{com.value}}<i  style=\"color: #ffd700;\" class=\"fa fa-star\"></i></span> -->\n\n                                        </p>\n                                        <div class=\"clearfix\"></div>\n                                        <span class=\"badge badge-light float-left\">{{com.value}}<i  style=\"color: #ffd700;\" class=\"fa fa-star\"></i></span>\n                                        <p>{{com.coment}}\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n                <!-- Pagination -->\n                <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n            </div>\n\n\n\n\n        </div>\n        <!-- Sidebar Widgets Column -->\n        <div class=\"col-md-3\">\n\n            <!-- Search Widget -->\n            <div class=\"card my-7\">\n\n                <h5 class=\"card-header\">Search</h5>\n                <div class=\"card-body\">\n                    <div class=\"input-group\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\">\n                        <span class=\"input-group-btn\">\n                <button class=\"btn btn-secondary\" type=\"button\">Go!</button>\n              </span>\n                    </div>\n                </div>\n            </div>\n\n\n            <br>\n            <br>\n            <div class=\"card my-1\">\n                <div *ngIf=\"canciones\" class=\"card-body\">\n                    <h6 class=\"card-header text-black\">Track list</h6>\n                    <hr color=\"black\">\n                    <p class=\"text-black\" *ngFor=\"let track of canciones\">\n                        {{track.track_number}}. {{track.name}}\n                        <!-- <iframe [src]=\"track.uri | domseguro :'https://open.spotify.com/embed?uri='\" width=\" 50 \" height=\"50\" frameborder=\"0 \" allowtransparency=\"true \" allow=\"encrypted-media \"></iframe> -->\n                    </p>\n                </div>\n            </div>\n\n            <!-- Categories Widget -->\n            <div class=\"card my-4\">\n                <h5 class=\"card-header\">Categories</h5>\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n                            <ul class=\"list-unstyled mb-0\">\n                                <li>\n                                    <a href=\"#\">Web Design</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">HTML</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">Freebies</a>\n                                </li>\n                            </ul>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <ul class=\"list-unstyled mb-0\">\n                                <li>\n                                    <a href=\"#\">JavaScript</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">CSS</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">Tutorials</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div>\n\n    </div>\n    <!-- /.row -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-artist',\n  templateUrl: './artist.component.html',\n})\nexport class ArtistComponent implements OnInit {\n\n  artista: any = {};\n  topTracks: any = {};\n  Albums: any = {};\n  Singles: any = {};\n  constructor(private router: ActivatedRoute, private spotify: SpotifyService, private nav: Router) {\n    this.router.params.subscribe( params =>{ \n    this.getAlbums( params['id']);\n    this.getSingles( params['id']);\n    this.getArtista( params['id']);\n    this.getTopTracks( params['id']);\n  });\n  }\n\n  ngOnInit(): void {\n  }\n\n  \n  verCard( item: any) {\n    let artistaId; let idAlbum;\n    if ( item.type === 'artist'){\n      artistaId = item.id;\n      this.nav.navigate(['artist/', artistaId]);\n    } else {\n      console.log(item.id);\n      artistaId = item.artists[0].id;\n      idAlbum = item.id;\n      this.nav.navigate(['albums/',idAlbum]);\n    }\n  }\n\n  getArtista( id: string ){\n \n    this.spotify.getArtista (id)\n      .subscribe( artista => {\n        console.log(artista);\n        this.artista = artista;\n      })\n}\n\ngetTopTracks(id: string){\n  this.spotify.getTopTracks(id)\n   .subscribe( topTracks =>{\n    console.log(\"TOP TRACKS\");\n    console.log(topTracks);\n    this.topTracks = topTracks;\n   });\n}\n\ngetAlbums(id: string){\n  this.spotify.getAlbumsArtista(id)\n   .subscribe( Albums =>{\n    console.log(\"ALBUMS DEL ARTISTA:\");\n    console.log(Albums);\n    this.Albums = Albums;\n   });\n}\n\ngetSingles(id: string){\n  this.spotify.getSinglesArtista(id)\n   .subscribe( data =>{\n    console.log(\"ALBUMS DEL ARTISTA:\");\n    console.log(data);\n    this.Singles = data;\n   });\n}\n\n}\n","<br>\n<br>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <!-- Card -->\n            <div class=\"card testimonial-card\">\n\n                <!-- Background color -->\n                <div class=\"card-up indigo lighten-1\"></div>\n                <!-- Name -->\n                <div class=\"card-title col-10\">\n                    <h3> {{artista.name}}</h3>\n                </div>\n\n                <!-- Avatar -->\n                <div class=\" row avatar  white\">\n                    <div class=\"col-2\">\n\n                    </div>\n                    <div class=\"col-8\">\n                        <img [src]=\"artista.images | noimage\" class=\"img-thumbnail rounded-circle\">\n                    </div>\n                    <div class=\"col-2\">\n\n                    </div>\n\n                </div>\n\n                <!-- Content -->\n                <div class=\"card-body\">\n\n                    <a [href]=\"artista.external_urls.spotify\">\n                        <button type=\"button\" class=\"btn btn-success\"><i class=\"fab fa-spotify\"></i></button>\n                    </a>\n                    <hr>\n                    <!-- Quotation -->\n                    <p><i class=\"fas fa-quote-left\"></i> <a *ngFor=\"let gen of artista.genres\"> {{gen}} / </a>\n                    </p>\n\n\n\n                </div>\n\n            </div>\n            <!-- Card -->\n\n        </div>\n        <div class=\"col-md-8\">\n            <div class=\"container\">\n                <div class=\"row my-2\">\n                    <div class=\"col-lg-12 order-lg-4\">\n                        <ul class=\"nav nav-tabs\">\n                            <li class=\"nav-item\">\n                                <a href=\"\" data-target=\"#Albums\" data-toggle=\"tab\" class=\"nav-link active\">Albums</a>\n                            </li>\n                            <li class=\"nav-item\">\n                                <a href=\"\" data-target=\"#Singles\" data-toggle=\"tab\" class=\"nav-link\">Singles/EPs</a>\n                            </li>\n\n                        </ul>\n                        <div class=\"tab-content py-4\">\n                            <div class=\"tab-pane active r\" id=\"Albums\">\n\n                                <div class=\"card-columns  pointer\">\n                                    <div (click)=\"verCard( item )\" *ngFor=\"let item of Albums.items\" class=\"card r poniter\">\n                                        <img [src]=\"item.images| noimage\" class=\"card-img-top poniter\" alt=\"...\">\n                                        <div class=\"card-body\">\n                                            <h5 class=\"card-title\"> {{item.name}} </h5>\n                                            <h6 class=\"card-title\">{{item.release_date | slice:0:4}}</h6>\n                                            <p class=\"card-text\">\n                                                <button *ngFor=\"let artista of item.artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                                   <span class=\"badge badge-light\" >   {{artista.name}} </span>\n                                            </button>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n\n                                <!-- <app-cards [items]=\"Albums.items\"></app-cards> -->\n                                <!--/row-->\n                            </div>\n                            <div class=\"tab-pane\" id=\"Singles\">\n                                <div class=\"card-columns  pointer\">\n                                    <div (click)=\"verCard( item )\" *ngFor=\"let item of Singles.items\" class=\"card r poniter\">\n                                        <img [src]=\"item.images| noimage\" class=\"card-img-top poniter\" alt=\"...\">\n                                        <div class=\"card-body\">\n                                            <h5 class=\"card-title\"> {{item.name}} </h5>\n                                            <h6 class=\"card-title\">{{item.release_date | slice:0:4}}</h6>\n                                            <p class=\"card-text\">\n                                                <button *ngFor=\"let artista of item.artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                                   <span class=\"badge badge-light\" >   {{artista.name}} </span>\n                                            </button>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <!-- <app-cards [items]=\"Singles.items\"></app-cards> -->\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n\n\n\n        </div>\n\n\n    </div>\n\n\n\n    <div class=\" col m-12\">\n        <div class=\"row\">\n            <h2>Top Tracks</h2>\n            <table class=\"table text-info\">\n                <thead>\n                    <tr class=\" \">\n\n                        <th>Vista Previa</th>\n                        <th>Album</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let track of topTracks.tracks | slice:0:5;let indice=index\">\n\n                        <!-- <td class=\"m-sm-auto\">\n                        <img [src]=\"track.album.images| noimage\" class=\"img-thumb\">\n                    </td> -->\n\n                        <td>\n                            <iframe [src]=\"track.uri | domseguro :'https://open.spotify.com/embed?uri='\" width=\" 300 \" height=\"80 \" frameborder=\"0 \" allowtransparency=\"true \" allow=\"encrypted-media \"></iframe></td>\n                        <td>{{track.album.name}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n<!-- <app-loading *ngIf=\"loading\"></app-loading> -->","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { auth } from 'firebase/app';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent  {\n  nuevasCanciones: any[] = [];\n  currentusu: any;\n  constructor(private spotify: SpotifyService, private router: Router, private auth: AuthService) {\n    this.spotify.getNewReleases().subscribe( (data: any) => {\n    // console.log(data);\n    this.nuevasCanciones = data;\n    }, (ServiceError) => {\n      // ServiceError.subscribe(res => console.log(' ERROR DE SERVICICE SPOTIFY ' + res));\n       console.log( ' ERROR DE SERVICICE SPOTIFY ' + JSON.stringify(ServiceError));\n    });\n\n  }\n\n  ngOnInit(): void {\n    this.auth.getUserfirebase( localStorage.getItem('uid')).subscribe(user => {\n      this.currentusu = user;\n  });\n  }\n\n  UsuCurrent(){\n    return this.currentusu;\n  }\n\n  verAlbum( item: any){\n    let idAlbum;\n    idAlbum = item.id;\n    this.router.navigate(['albums', idAlbum]);\n    }\n}\n","<br>\n<div *ngIf=\"currentusu \">\n    <h1 class=\"text-center\" *ngIf=\"currentusu[0].nombre != 'undefined' \">\n        Welcome back... <a [routerLink]=\"['/profile']\">  {{currentusu[0].nombre}} </a>\n    </h1>\n</div>\n\n<hr>\n<div class=\"container\">\n\n    <!-- BANNER NEWS ALBUMS -->\n    <div class=\"row puntero \">\n        <!-- PRIMERA COLUMNA -->\n        <div class=\"col-sm-6 \">\n            <div class=\"row justify-content-end \">\n                <div class=\" div-pic-1 \" (click)=\"verAlbum(nuevasCanciones[0])\">\n                    <div class=\"hovereffect\">\n                        <img [src]=\"nuevasCanciones[0]?.images | noimage\" class=\"img-fluid \">\n                        <div class=\"overlay\">\n                            <h6> {{nuevasCanciones[0]?.name}}\n                                <h2>{{nuevasCanciones[0]?.artists[0].name}} </h2>\n                            </h6>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row justify-content-end\">\n                <div class=\"div-pic-2 \" (click)=\"verAlbum(nuevasCanciones[1])\">\n                    <div class=\"hovereffect\">\n                        <img [src]=\"nuevasCanciones[1]?.images | noimage \" class=\"img-fluid \">\n                        <div class=\"overlay\">\n                            <h6> {{nuevasCanciones[1]?.name}}\n                            </h6>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"div-pic-2  \" (click)=\"verAlbum(nuevasCanciones[2])\">\n                    <div class=\"hovereffect\">\n                        <img [src]=\"nuevasCanciones[2]?.images | noimage \" class=\"img-fluid \">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- SEGUNDA COLUMNA COLUMNA -->\n        <div class=\"col-sm-6 \">\n            <div class=\"row \">\n                <div class=\"div-pic-2 \" (click)=\"verAlbum(nuevasCanciones[3])\">\n                    <div class=\"hovereffect\">\n                        <img [src]=\"nuevasCanciones[3]?.images | noimage \" class=\"img-fluid \">\n\n                    </div>\n\n                </div>\n                <div class=\"div-pic-2  \" (click)=\"verAlbum(nuevasCanciones[4])\">\n                    <div class=\"hovereffect\">\n                        <img [src]=\"nuevasCanciones[4]?.images | noimage \" class=\"img-fluid \">\n\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"row \">\n                <div class=\"div-pic-1 \" (click)=\"verAlbum(nuevasCanciones[5])\">\n                    <div class=\"hovereffect\">\n                        <img [src]=\"nuevasCanciones[5]?.images | noimage \" class=\"img-fluid \">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <br>\n    <h1>NEW REALEASES</h1>\n    <hr>\n    <app-cards class=\"puntero\" [itemslenght]=\"nuevasCanciones.length \" [items]=\"nuevasCanciones \"> </app-cards>\n</div>\n\n<br>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioModel } from '../../models/usuario.model';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: UsuarioModel = new UsuarioModel();\n  constructor(public auth: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    // this.auth.isAuth().subscribe(user => {\n    //   console.log(\"ENTRAAAAAAAAA\");\n    //   console.log(user);\n    //     if (user) {\n    //       this.router.navigateByUrl('/home');\n    //     }\n    //   });\n  }\n\n loginGoogle(){\n   console.log(\"GOOOOOGLE\");\n   this.auth.loginGoogle().then((res) =>{\n    this.router.navigateByUrl('/home');\n    }).catch(err => console.log('err', err));\n\n  //  this.auth.isAuth().subscribe(user => {\n  //   console.log(\"ENTRAAAAAAAAA\");\n  //   this.router.navigateByUrl('/home');\n    \n  //     if (user) {\n  //       this.router.navigateByUrl('/home');\n  //     }\n  //   });\n }\n\n  loginn( form: NgForm){\n    if (form.invalid){ return;}\n\n    Swal.fire({\n      allowOutsideClick: false,\n      text: 'Espera por favor...',\n      icon: 'info',\n      });\n      Swal.showLoading();\n\n    this.auth.login( this.user )\n    .subscribe(resp => {\n      Swal.close();\n      this.router.navigateByUrl('/home');\n     // console.log(resp);\n    }, (err) => {\n      console.log(err.error.error.message)\n      Swal.fire({\n        allowOutsideClick: false,\n        text: err.error.error.message,\n        title: 'Error al autenticar',\n        titleText: 'Error',\n        icon: 'error',\n      });\n    });\n  }\n\n}\n","<div class=\"container\">\n    <br>\n\n    <hr>\n\n    <!-- PARA INICIAR CON GOOGLE -->\n\n\n    <div class=\"row animated fadeIn\">\n        <aside class=\"col-sm-4\">\n\n        </aside>\n        <!-- col.// -->\n        <aside class=\"col-sm-4\">\n            <div class=\"card\">\n                <article class=\"card-body\">\n                    <!-- <a href=\"\" class=\"float-right btn btn-outline-primary\">Sign up</a> -->\n                    <h4 class=\"card-title mb-4 mt-1\">Sign in</h4>\n                    <!-- <p #login>\n                     \n\n\n                        <a class=\"btn btn-block btn-outline-info\" (click)=\"loginGoogle()\">Login with google</a>\n\n                    </p> -->\n                    <hr>\n                    <form (ngSubmit)=\"loginn(f)\" #f=\"ngForm\">\n                        <span *ngIf=\" f.submitted && f.controls['email'].errors\" class=\"text-danger animated fadeIn\">Email is required</span>\n                        <div class=\"form-group \">\n                            <input name=\"email\" [(ngModel)]=\"user.email\" class=\"form-control \" required placeholder=\"Email\" type=\"email \">\n                        </div>\n\n                        <span *ngIf=\" f.submitted && f.controls['password'].errors\" class=\"text-danger animated fadeIn\" class=\"text-danger\">min 6 characters is required</span>\n                        <div class=\"form-group \">\n                            <input class=\"form-control\" [(ngModel)]=\"user.password\" name=\"password\" required type=\"password\" minlength=\"6\" placeholder=\"****** \">\n\n                        </div>\n\n                        <div class=\"row \">\n                            <div class=\"col-md-6 \">\n                                <div class=\"form-group \">\n                                    <button type=\"submit \" class=\"btn btn-primary btn-block \"> Login  </button>\n                                </div>\n\n                            </div>\n                            <div>\n                                <a routerLink=\"/register\" class=\"txt1\">\n                                    Create Count\n                                </a>\n                            </div>\n                        </div>\n                        <!-- .row// -->\n                    </form>\n                </article>\n            </div>\n            <!-- card.// -->\n\n        </aside>\n        <!-- col.// -->\n        <aside class=\"col-sm-4 \">\n        </aside>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { StarService } from '../../services/star.service';\nimport { FileItem } from 'src/app/models/file-item.model';\nimport { NgForm } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { UsuarioModel } from '../../models/usuario.model';\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private auth: AuthService,private starservice: StarService,private aut: AuthService) { }\n\n  currentusu: any;\n  urlimg: any;\n  public recentactivity = [];\n  bucle: number[] = [0, 1, 2, 3, 4];\n  imagen: FileItem;\n  archivos: FileItem[] = [];\n  estasobreDrop: boolean = false;\n  user: UsuarioModel = new UsuarioModel();\n\n  ngOnInit(): void {\n    this.auth.getUserfirebase( localStorage.getItem('uid')).subscribe(user => {\n      this.currentusu = user;\n      var outerHtmlElement: any = user;\n      // this.urlimg = user[0].photo;\n      this.urlimg = outerHtmlElement[0].photo;\n      this.starservice.getRecentStars(outerHtmlElement[0].nombre).subscribe(recent => {\n        this.recentactivity = recent;\n        // console.log(this.recentactivity);\n      });\n  });\n\n  }\n\n\n  edit( form: NgForm){\n    if (form.invalid){ return;}\n    Swal.fire({\n      allowOutsideClick: false,\n      text: 'Espera por favor...',\n      icon: 'info',\n      });\n      Swal.showLoading();\n\n    this.auth.updateUserData( this.user )\n    .then(resp => {\n      Swal.close();\n      // this.router.navigateByUrl('/home');\n     // console.log(resp);\n    }, (err) => {\n      console.log(err.error.error.message)\n      Swal.fire({\n        allowOutsideClick: false,\n        text: err.error.error.message,\n        title: 'Error al editar',\n        titleText: 'Error',\n        icon: 'error',\n      });\n    });\n  }\n\n  uploadImg(imagen: FileItem){\n    console.log(\"archivoss\"+JSON.stringify(this.archivos));\n    this.aut.saveimg(this.archivos);\n    Swal.fire({\n      icon: 'success',\n      title: 'Your new Photo is saved',\n      // text: star ,\n      //html: ' <i style=\"color:#ffd700;\" class=\"fa fa-star\"></i>',\n      showConfirmButton: true,\n    })\n  }\n  estaSobreElemento(){\n    console.log(\"sobre\");\n  }\n\n\n}\n","<br>\n<div class=\"container\">\n    <div class=\"row my-2\">\n        <div class=\"col-lg-8 order-lg-2\">\n            <ul class=\"nav nav-tabs\">\n                <li class=\"nav-item\">\n                    <a href=\"\" data-target=\"#info\" data-toggle=\"tab\" class=\"nav-link active\">Info</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a href=\"\" data-target=\"#recent\" data-toggle=\"tab\" class=\"nav-link\">Recent Activity</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a href=\"\" data-target=\"#edit\" data-toggle=\"tab\" class=\"nav-link\">Edit</a>\n                </li>\n            </ul>\n            <div class=\"tab-content py-4\">\n                <div class=\"tab-pane active\" id=\"info\">\n                    <h5 class=\"mb-3\"></h5>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <h6>Email</h6>\n                            <div *ngIf=\"currentusu\">\n                                <p *ngIf=\"currentusu[0].email != 'undefined'\">\n                                    {{currentusu[0].email}}\n                                </p>\n                            </div>\n\n                            <h6>Name</h6>\n                            <div *ngIf=\"recentactivity[0]\">\n                                <p *ngIf=\"recentactivity[0].albumId != 'undefined' \">\n                                    {{currentusu[0].nombre}}\n                                </p>\n                            </div>\n\n                        </div>\n                        <div class=\"col-md-6\">\n                            <h6>Recent badges</h6>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">html5</a>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">react</a>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">codeply</a>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">angularjs</a>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">css3</a>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">jquery</a>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">bootstrap</a>\n                            <a href=\"#\" class=\"badge badge-dark badge-pill\">responsive-design</a>\n                            <hr>\n                            <span class=\"badge badge-primary\"><i class=\"fa fa-user\"></i> 900 Followers</span>\n                            <span class=\"badge badge-success\"><i class=\"fa fa-cog\"></i> 43 Forks</span>\n                            <span class=\"badge badge-danger\"><i class=\"fa fa-eye\"></i> 245 Views</span>\n                        </div>\n\n                    </div>\n                    <!--/row-->\n                </div>\n                <div class=\"tab-pane\" id=\"recent\">\n                    <div class=\"col-md-12\">\n                        <h5 class=\"mt-2\"><span class=\"fa fa-clock-o ion-clock float-right\"></span>\n                            <div *ngIf=\"currentusu\">\n                                <div *ngIf=\"currentusu[0].nombre != 'undefined' \">{{currentusu[0].nombre}} Recent Activity</div>\n                            </div>\n                        </h5>\n                        <table class=\"table table-sm table-hover table-striped\">\n                            <tbody *ngFor=\"let i of bucle\">\n                                <tr>\n                                    <td>\n                                        <div *ngIf=\"recentactivity[i]\"><strong *ngIf=\"recentactivity[i].userId != 'undefined' \">{{recentactivity[i].userId}} </strong> reted with <strong *ngIf=\"recentactivity[i].value != 'undefined' \">{{recentactivity[i].value}} </strong> to\n                                            <strong *ngIf=\"recentactivity[i].albumId != 'undefined' \">{{recentactivity[i].albumId}} </strong>\n                                        </div>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div class=\"tab-pane\" id=\"edit\">\n\n                    <form (ngSubmit)=\"edit(f)\" #f=\"ngForm\">\n                        <div> <span *ngIf=\" f.submitted && f.controls['email'].errors\" class=\"text-danger animated fadeIn\">Email is required</span></div>\n\n                        <div class=\"form-group \">\n                            <input name=\"email\" [(ngModel)]=\"user.email\" class=\"form-control \" required placeholder=\"Email\" type=\"email \">\n                        </div>\n                        <span *ngIf=\" f.submitted && f.controls['nombre'].errors\" class=\"text-danger animated fadeIn\">Username is required</span>\n                        <div class=\"form-group \">\n                            <input name=\"nombre\" [(ngModel)]=\"user.nombre\" required class=\"form-control \" placeholder=\"Username\" type=\"text\">\n                        </div>\n\n                        <!-- form-group// -->\n\n                        <span *ngIf=\" f.submitted && f.controls['password'].errors\" class=\"text-danger animated fadeIn\" class=\"text-danger\">min 6 characters is required</span>\n                        <div class=\"form-group \">\n                            <input class=\"form-control \" type=\"password\" name=\"password\" required [(ngModel)]=\"user.password\" minlength=\"6\" placeholder=\"******\">\n                        </div>\n                        <!-- form-group// -->\n                        <div class=\"row \">\n                            <div class=\"col-md-6 \">\n                                <div class=\"form-group \">\n                                    <button type=\"submit \" class=\"btn btn-primary btn-block \"> Save  </button>\n                                </div>\n                            </div>\n\n                        </div>\n                        <!-- .row// -->\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-4 order-lg-1 text-center \">\n\n            <div appNgDropFiles [archivos]=\"archivos\" [imagen]=\"imagen\" (mouseSobre)=\"estasobreDrop = $event\" [ngClass]=\"{'file-over': estasobreDrop}\" class=\"drop-zone\">\n                <div *ngIf=\"urlimg\"> <img [src]=\" urlimg \" class=\"mx-auto img-fluid img-circle d-block\" alt=\"avatar\"></div>\n                <h6 class=\"mt-2\">Insert a different photo</h6>\n                <div *ngIf=\"archivos[0]\">\n                    <p *ngIf=\"archivos[0].nombreArchivo != 'undefined'\">{{archivos[0].nombreArchivo}}</p>\n                </div>\n\n            </div>\n            <br>\n            <div class=\"btn blue-gradient btn-sm center\">\n                <button class=\"btn btn-secondary\" (click)=\"uploadImg(imagen)\"> <i class=\"fas fa-upload\"></i> upload</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UsuarioModel } from '../../models/usuario.model';\nimport { NgForm } from '@angular/forms';\nimport { auth } from 'firebase/app';\nimport Swal from 'sweetalert2';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user: UsuarioModel;\n\n  constructor(private auth: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.user = new UsuarioModel();\n   // this.user.email = ' ';\n  }\n\n  onSubmit( form: NgForm) {\n    // console.log(form);\n    if (form.invalid) { return; }\n    Swal.fire({\n      allowOutsideClick: false,\n      text: 'Espera por favor...',\n      icon: 'info',\n      });\n      Swal.showLoading();\n    this.auth.newUser(this.user)\n    .subscribe(resp => {\n      Swal.close();\n      Swal.fire({\n        icon: 'success',\n        title: 'Your created new Count',\n        showConfirmButton: false,\n        timer: 3500\n      })\n      this.router.navigateByUrl('/login');\n    \n    }, (err) =>{\n      console.log(err.error.error.message);\n      Swal.fire({\n        allowOutsideClick: false,\n        text: err.error.error.message,\n        title: 'Error al autenticar',\n        titleText: 'Error',\n        icon: 'error',\n      }); \n    });\n  }\n\n\n}\n","<div class=\"limted animated fadIn\">\n    <div class=\"container \">\n        <br>\n\n        <hr>\n\n        <div class=\"row \">\n            <aside class=\"col-sm-4\">\n\n            </aside>\n            <!-- col.// -->\n            <aside class=\"col-sm-4\">\n                <div class=\"card\">\n                    <article class=\"card-body\">\n\n                        <h4 class=\"card-title mb-4 mt-1\">Sign up</h4>\n                        <hr>\n                        <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n                            <span *ngIf=\" f.submitted && f.controls['email'].errors\" class=\"text-danger animated fadeIn\">Email is required</span>\n                            <div class=\"form-group \">\n                                <input name=\"email\" [(ngModel)]=\"user.email\" class=\"form-control \" required placeholder=\"Email\" type=\"email \">\n                            </div>\n                            <span *ngIf=\" f.submitted && f.controls['nombre'].errors\" class=\"text-danger animated fadeIn\">Username is required</span>\n                            <div class=\"form-group \">\n                                <input name=\"nombre\" [(ngModel)]=\"user.nombre\" required class=\"form-control \" placeholder=\"Username\" type=\"text\">\n                            </div>\n\n                            <!-- form-group// -->\n\n                            <span *ngIf=\" f.submitted && f.controls['password'].errors\" class=\"text-danger animated fadeIn\" class=\"text-danger\">min 6 characters is required</span>\n                            <div class=\"form-group \">\n                                <input class=\"form-control \" type=\"password\" name=\"password\" required [(ngModel)]=\"user.password\" minlength=\"6\" placeholder=\"******\">\n                            </div>\n                            <!-- form-group// -->\n                            <div class=\"row \">\n                                <div class=\"col-md-6 \">\n                                    <div class=\"form-group \">\n                                        <button type=\"submit \" class=\"btn btn-primary btn-block \"> Create User  </button>\n                                    </div>\n                                </div>\n                                <div>\n                                    <a routerLink=\"/login\" class=\"txt1\">\n                                        LogIn\n                                    </a>\n                                </div>\n                            </div>\n                            <!-- .row// -->\n                        </form>\n                    </article>\n                </div>\n\n\n            </aside>\n            <!-- col.// -->\n            <aside class=\"col-sm-4 \">\n            </aside>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SearchAllComponent } from './search-all.component';\nimport { SearchComponent } from './search.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-search-albums',\n  template: `\n  <p>Albummsss</p>\n    <div class=\"container\">\n    <h3>Albums</h3>\n    <hr>\n    <app-cards class=\"puntero\" [items]=\"albums\"> </app-cards>\n   </div>\n  `,\n  styles: []\n})\nexport class SearchAlbumsComponent implements OnInit {\n  albums: any[] = [];\n  termino: any;\n  loading: boolean;\n  constructor(\n              private router: ActivatedRoute) {\n                this.loading = true;\n                this.router.parent.params.subscribe( params =>{\n                this.termino= params['termino'];\n            }) \n            console.log(\"termino en ALabum\" +this.termino);}\n\n  ngOnInit(): void {\n    // this.search.buscarAlbum(this.termino);\n    // this.albums = this.search.albums;\n    //this.loading = false;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SearchComponent } from './search.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { SpotifyService } from 'src/app/services/spotify.service';\n\n@Component({\n  selector: 'app-search-all',\n  template: `\n  <p>All...</p>\n<div class=\"container\">\n    <h3>Albums</h3>\n    <hr>\n    <app-cards class=\"puntero\" [items]=\"albums\"> </app-cards>\n</div>\n\n<div class=\"container\">\n    <h3>Artists</h3>\n    <hr>\n    <app-cards class=\"puntero\" [items]=\"artistas\"> </app-cards>\n</div>\n  `,\n  styles: []\n})\nexport class SearchAllComponent implements OnInit {\n  artistas: any[] = [];\n  albums: any[] = [];\n  termino: any;\n\n  constructor(private sear: SearchComponent,\n              private router: ActivatedRoute,\n              private spotify: SpotifyService) {\n                this.router.parent.params.subscribe( params =>{\n                this.termino = params['termino'];\n                })\n                console.log(\"termino en All\" +this.termino);\n   }\n\n  ngOnInit(): void {;\n    //     this.albums = null;\n    //     this.artistas = null;\n    //     console.log(\"ENTRA EN ALL\");\n     this.buscarAlbum(this.termino);\n     this.buscarArtist(this.termino);\n  }\n\n  buscarAlbum(termino: string) {\n    this.spotify.getAlbums(termino).subscribe(data => {\n            console.log(data);\n            this.albums = data;\n    });\n  }\n  buscarArtist(termino: string) {\n    this.spotify.getArtistas(termino).subscribe(data => {\n      console.log(data);\n      this.artistas = data;\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SearchComponent } from './search.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-search-artists',\n  template: `\n    <p>Artistsss</p>\n    <div class=\"container\">\n    <h3>Artists</h3>\n    <hr>\n    <app-cards class=\"puntero\" [items]=\"artistas\"> </app-cards>\n</div>\n  `,\n  styles: []\n})\nexport class SearchArtistsComponent implements OnInit {\n\n  artistas: any[] = [];\n  termino: any;\n  constructor(private search: SearchComponent,\n              private router: ActivatedRoute) {\n    this.router.parent.params.subscribe( params =>{\n     this.termino = params['termino'];\n    })\n    console.log(\"termino en Artist\" +this.termino);\n  }\n\n  ngOnInit(): void {\n   console.log(\"entra\");\n  //  this.search.buscarArtist(this.termino);\n  // this.artistas = this.search.artistas;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { SearchAllComponent } from './search-all.component';\nimport { SearchAlbumsComponent } from './search-albums.component';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n \n})\nexport class SearchComponent implements OnInit {\n\n  artistas: any[] = [];\n  albums: any[] = [];\n  loading: boolean;\n  termino: any;\n  search: boolean;\n \n  constructor(private spotify: SpotifyService,\n              private activatedRoute: ActivatedRoute,\n              ) {\n                this.loading = true;\n                this.search = true;\n               }\n\n  ngOnInit(){\n  this.activatedRoute.params.subscribe(params => {\n    this.spotify.getAlbums(params['termino']).subscribe(data => {\n    this.albums = data;});\n    this.spotify.getArtistas(params['termino']).subscribe(data => {\n    this.artistas = data;});\n    this.termino = params['termino'];\n    // console.log(\"PARAMETROS: \" + JSON.stringify(params))\n  })\n  this.loading = false;\n  }\n\n  ocultar(){\n    this.search = false;\n\n  }\n\n\n\n}\n","<br>\n<!-- <div class=\"btn-group btn-group-toggle\" (click)=\"ocultar()\" role=\"group\" aria-label=\"Basic example\">\n    <button type=\"button\" class=\"btn btn-secondary\" [routerLink]=\"['all']\">All</button>\n    <button type=\"button\" class=\"btn btn-secondary\" [routerLink]=\"['albums']\">Albums</button>\n    <button type=\"button\" class=\"btn btn-secondary\" [routerLink]=\"['artists']\">Artists</button>\n</div> -->\n\n<div class=\"btn-group btn-group-toggle\" role=\"group\" aria-label=\"Basic example\">\n    <button type=\"button\" class=\"btn btn-secondary active\" [routerLink]=\"['/search', termino]\">All</button>\n    <button type=\"button\" class=\"btn btn-secondary\" [routerLink]=\"['/searchalbums', termino]\">Albums</button>\n    <button type=\"button\" class=\"btn btn-secondary\" [routerLink]=\"['/searchartists', termino]\">Artists</button>\n</div>\n\n\n<router-outlet></router-outlet>\n\n<h4 style=\" \"> Results for \"{{termino}}\"...</h4>\n<br>\n<app-loading *ngIf=\"loading=== true\"></app-loading>\n<div>\n    <div class=\"container\">\n        <h3>Albums</h3>\n        <hr>\n        <app-cards class=\"puntero\" [itemslenght]=\"albums.length\" [items]=\"albums\"> </app-cards>\n    </div>\n\n    <div class=\"container\">\n        <h3>Artists</h3>\n        <hr>\n        <app-cards class=\"puntero\" [itemslenght]=\"artistas.length\" [items]=\"artistas\"> </app-cards>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-searchalbum',\n  templateUrl: './searchalbum.component.html'\n})\nexport class SearchalbumComponent implements OnInit {\n\n  albums: any[] = [];\n  loading: boolean;\n  termino: any;\n  search: boolean;\n  constructor(private spotify: SpotifyService,\n              private activatedRoute: ActivatedRoute,) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      // console.log(\"PARAMETROS: \" + JSON.stringify(params))\n      this.spotify.getAlbums(params['termino']).subscribe(data => {\n        // console.log(data);\n        this.albums = data;\n});\n      this.termino = params['termino'];\n    })\n  }\n\n}\n","<br>\n\n\n<div class=\"btn-group btn-group-toggle\" role=\"group\" aria-label=\"Basic example\">\n    <button type=\"button\" class=\"btn btn-secondary \" [routerLink]=\"['/search', termino]\">All</button>\n    <button type=\"button\" class=\"btn btn-secondary active\" [routerLink]=\"['/searchalbums', termino]\">Albums</button>\n    <button type=\"button\" class=\"btn btn-secondary \" [routerLink]=\"['/searchartists', termino]\">Artists</button>\n</div>\n\n\n<h4> Results for \"{{termino}}\"...</h4>\n<br>\n<app-loading *ngIf=\"loading=== true\"></app-loading>\n<router-outlet></router-outlet>\n<div>\n    <div class=\"container\">\n\n        <h3>Albums</h3>\n        <hr>\n        <app-cards class=\"puntero\" [itemslenght]=\"albums.length\" [items]=\"albums\"> </app-cards>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-searchartist',\n  templateUrl: './searchartist.component.html'\n})\nexport class SearchartistComponent implements OnInit {\n\n  artistas: any[] = [];\n  loading: boolean;\n  termino: any;\n  search: boolean;\n  constructor(private spotify: SpotifyService,\n              private activatedRoute: ActivatedRoute,) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      // console.log(\"PARAMETROS: \" + JSON.stringify(params))\n      this.spotify.getArtistas(params['termino']).subscribe(data => {\n        // console.log(data);\n        this.artistas = data;\n});\n      this.termino = params['termino'];\n    })\n  }\n\n}\n","<br>\n\n\n<div class=\"btn-group btn-group-toggle\" role=\"group\" aria-label=\"Basic example\">\n    <button type=\"button\" class=\"btn btn-secondary \" [routerLink]=\"['/search', termino]\">All</button>\n    <button type=\"button\" class=\"btn btn-secondary \" [routerLink]=\"['/searchalbums', termino]\">Albums</button>\n    <button type=\"button\" class=\"btn btn-secondary active\" [routerLink]=\"['/searchartists', termino]\">Artists</button>\n</div>\n\n\n<h4 style=\" \"> Results for \"{{termino}}\"...</h4>\n<br>\n<app-loading *ngIf=\"loading=== true\"></app-loading>\n<router-outlet></router-outlet>\n<div>\n    <div class=\"container\">\n        <h3>Artists</h3>\n        <hr>\n        <app-cards class=\"puntero\" [itemslenght]=\"artistas.length\" [items]=\"artistas\"> </app-cards>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.css']\n})\nexport class CardsComponent  implements OnInit{\n\n  @Input() items: any[] = [];\n  @Input() itemslenght: number;\n  items2: any[] = [];\n  bucle: number[] = [0, 1, 2, 3, 4];\n  collections: any[] = [ ];\n  p: number = 1;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.items2 = this.items\n    // console.log (\"Block  titemslenght\" + this.itemslenght );\n    this.Paginador();\n  }\n\n  ngOnChanges(): void {\n    this.Paginador();\n  }\n\n  verCard( item: any) {\n    let artistaId; let idAlbum;\n    if ( item.type === 'artist'){\n      artistaId = item.id;\n      this.router.navigate(['artist/', artistaId]);\n    } else {\n      // console.log(item.id);\n      artistaId = item.artists[0].id;\n      idAlbum = item.id;\n      this.router.navigate(['albums/',idAlbum]);\n    }\n  }\n\n  Paginador(){\n    let col: any[] =[];\n    var paginas = Math.ceil(this.itemslenght / 12);\n    // console.log (\"PAGINADOR\" + this.items  + paginas);\n    for (let i = 0; i < paginas; i++) {\n      var a=1;\n      var pag: any[] = [0, 12, 24, 36, 48, 60, 72, 84, 96 ];\n      this.collections[i]= pag[i];\n      // console.log (\"Block statement execution no.\" + i);\n    }\n  }\n\n\n}\n","<!-- Pagination -->\n<pagination-controls (pageChange)=\"p = $event\">\n\n</pagination-controls>\n<ul class=\"list-inline\">\n    <li class=\"list-inline-item\" *ngFor=\"let numcard of collections  | paginate: { itemsPerPage: 1, currentPage: p }\">\n\n        <div class=\"row\">\n            <div class=\"col-2\" *ngIf=\"items[numcard]\">\n                <div (click)=\"verCard( items[numcard] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+1]\">\n\n                <div (click)=\"verCard( items[numcard+1] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+1].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+1].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+1].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+1].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+2]\">\n\n                <div (click)=\"verCard( items[numcard+2] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+2].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+2].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+2].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+2].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"col-2\" *ngIf=\"items[numcard+3]\">\n                <div (click)=\"verCard( items[numcard+3] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+3].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+3].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+3].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+3].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+4]\">\n                <div (click)=\"verCard( items[numcard+4] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+4].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+4].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+4].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+4].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+5]\">\n                <div (click)=\"verCard( items[numcard+5] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+5].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+5].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+5].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+5].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-2\" *ngIf=\"items[numcard+6]\">\n                <div (click)=\"verCard( items[numcard+6] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+6].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+6].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+6].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+6].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+7]\">\n                <div (click)=\"verCard( items[numcard+7] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+7].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+7].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+7].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+7].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+8]\">\n                <div (click)=\"verCard( items[numcard+8] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+8].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+8].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+8].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+8].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+9]\">\n                <div (click)=\"verCard( items[numcard+9] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+9].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+9].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+9].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+9].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+10]\">\n                <div (click)=\"verCard( items[numcard+10] )\" class=\"card r pointer\">\n                    <img [src]=\"items[numcard+10].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+10].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+10].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+10].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                                <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-2\" *ngIf=\"items[numcard+11]\">\n                <div (click)=\"verCard( items[numcard+11] )\" class=\"card r pointer\">\n\n                    <img [src]=\"items[numcard+11].images| noimage\" class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\"> {{items[numcard+11].name}} </h5>\n                        <h6 class=\"card-title\">{{items[numcard+11].release_date | slice:0:4}}</h6>\n                        <p class=\"card-text\">\n                            <button *ngFor=\"let artista of items[numcard+11].artists \" [routerLink]=\"['/artist', artista.id]\" type=\"button\" class=\"btn btn-light\">\n                               <h6>  {{artista.name}} </h6>\n                        </button>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n\n\n\n        <!-- Pagination -->\n        <!-- <br>\n        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row text-center\">\n    <div class=\"col\"><i class=\"fas fa-spinner fa-spin fa-5x\"></i></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { SearchComponent } from '../../search/search.component';\nimport { SpotifyService } from '../../../services/spotify.service';\nimport { UsuarioModel } from 'src/app/models/usuario.model';\nimport { HomeComponent } from '../../home/home.component';\n\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n})\n\nexport class NavbarComponent implements OnInit {\n  public isLogged: boolean = false;\n  public usu: any;\n  constructor( private auth: AuthService,\n               private router: Router,\n               private spoti: SpotifyService,\n               ) {this.auth.isAuth().subscribe(user => {\n                if(user){\n                  this.isLogged = true;\n                  this.auth.getUserfirebase( localStorage.getItem('uid')).subscribe(user => {\n                    this.usu = user;\n                    // console.log(this.usu);\n                });\n                }\n                else {this.isLogged = false;}\n              }); }\n\n              ngOnInit(): void {\n\n              }\n\n  buscar(termino: string){\n    // console.log(termino);\n   // this.router.navigateByUrl('/search');\n    this.router.navigate(['/search',termino]);\n}\n\n  signout(){\n    this.auth.logout_();\n    localStorage.clear();\n    this.router.navigateByUrl('/login');\n  }\n \n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" routerLink=\"home\" href=\"#\">\r\n\r\n        <img src=\"assets/img/logom.png\" width=\"30\" height=\"30\" alt=\"\"> MusicBox\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a class=\"nav-link \" routerLink=\"home\">Home </a>\r\n            </li>\r\n            <li class=\"nav-item \" routerLinkActive=\"active\">\r\n                <a class=\"nav-link \" routerLink=\"profile\">Profile</a>\r\n            </li>\r\n            <!-- <li class=\"nav-item \" routerLinkActive=\"active\">\r\n                <a class=\"nav-link \" routerLink=\"search\">Search</a>\r\n            </li> -->\r\n            <!-- <li class=\"nav-item dropdown \">\r\n                <a class=\"nav-link dropdown-toggle \" href=\"# \" id=\"navbarDropdown \" role=\"button \" data-toggle=\"dropdown \" aria-haspopup=\"true \" aria-expanded=\"false \">\r\n                Dropdown\r\n              </a>\r\n                <div class=\"dropdown-menu \" aria-labelledby=\"navbarDropdown \">\r\n                    <a class=\"dropdown-item \" href=\"# \">Action</a>\r\n                    <a class=\"dropdown-item \" href=\"# \">Another action</a>\r\n                    <div class=\"dropdown-divider \"></div>\r\n                    <a class=\"dropdown-item \" href=\"# \">Something else here</a>\r\n                </div>\r\n            </li> -->\r\n            <!-- <li class=\"nav-item \">\r\n                <a class=\"nav-link disabled \" href=\"# \" tabindex=\"-1 \" aria-disabled=\"true \">Disabled</a>\r\n            </li> -->\r\n        </ul>\r\n\r\n\r\n\r\n\r\n        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n            <form class=\"form-inline my-2 my-lg-0 \">\r\n                <input #termino (keyup.enter)=\"buscar(termino.value)\" class=\"form-control mr-sm-2\" placeholder=\" Search \">\r\n                <button (click)=\"buscar(termino.value)\" class=\"btn btn-outline-success my-2 my-sm-0 \" type=\"button \">Search</button>\r\n            </form>\r\n            <li class=\"nav-item \" routerLinkActive=\"active\">\r\n                <div *ngIf=\"usu\"><a class=\"nav-link \" *ngIf=\"usu[0].nombre != 'undefined' \">Logged: {{isLogged}} {{usu[0].nombre}}</a></div>\r\n\r\n            </li>\r\n\r\n            <li class=\"nav-item avatar\">\r\n                <a class=\"nav-link p-0 pointer\" *ngIf=\"usu\">\r\n                    <div *ngIf=\"usu[0].nombre != 'undefined' \"> <img [src]=\"usu[0].photo \" routerLink=\"profile\" class=\"rounded-circle z-depth-0\" alt=\"avatar image\" height=\"35\"></div>\r\n\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item \" routerLinkActive=\"active\">\r\n                <a class=\"nav-link \"></a>\r\n            </li>\r\n            <button class=\"btn btn-outline-danger\" (click)=\"signout()\">salir</button>\r\n        </ul>\r\n\r\n\r\n    </div>\r\n\r\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbarsearch',\n  templateUrl: './navbarsearch.component.html',\n  \n})\nexport class NavbarsearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbarsearch works!</p>\n\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link active\" href=\"#\">All <span class=\"sr-only\">(current)</span></a>\n            <a class=\"nav-item nav-link\" href=\"#\">Albums</a>\n            <a class=\"nav-item nav-link\" href=\"#\">Artists</a>\n        </div>\n    </div>","import { Component, OnInit, Input} from '@angular/core';\nimport { StarRatingComponent } from 'ng-starrating';\nimport { StarService } from '../../services/star.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { AuthService } from '../../services/auth.service';\n\n\n\n@Component({\n  selector: 'app-star-review',\n  templateUrl: './star-review.component.html', styles: [`\n  .rating-list li {\n    float: right;\n    color: #ddd;\n    padding: 10px 5px;\n}\n.rating-list li:hover,\n.rating-list li:hover~li,\n.rating-list li.selected {\n    color: #ffd700;\n}\n.rating-list {\n    display: inline-block;\n    list-style: none;\n}\n`],\n})\nexport class StarReviewComponent implements OnInit {\n\n  stars: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  selectedValue: any = 0;\n  textValue: any;\n  usersrating: any;\n  color: string = \"light\";\n  value: any = null; //RATING DE ESTRELLAS A UN ALBUM\n  @Input('idalbum') idalbum;\n  @Input('portada') portada;\n  @Input('iduser') iduser;\n\n  constructor(private starService: StarService,private auth: AuthService) {\n}\n\n  ngOnInit(): void {\n    this.starService.getUserAlbumStarr(this.iduser[0],this.idalbum[0]).subscribe(val => {\n      if(val){\n        console.log(\"entra\");\n        this.value = val;\n        var outerHtmlElement: any = val;\n        console.log(outerHtmlElement[0].value);\n        this.selectedValue = outerHtmlElement[0].value;\n        this.textValue = outerHtmlElement[0].coment;\n      }\n     });\n\n    this.starService.getAllStarAlbum(this.idalbum[0]).subscribe(res =>{\n      console.log(\"ALLSTARS\");\n      let contador = 0;\n      let values = 0;\n      res.forEach(doc => {\n           var outerHtmlElement: any = doc;\n           contador = contador + 1;\n           values = outerHtmlElement.value + values;\n           });\n      this.usersrating = values/contador;\n      switch(true) {\n        case (this.usersrating > 7.99): {\n          console.log(\"entra\");\n           this.color = \"success\";\n           break;\n        } \n        case (this.usersrating>4.99): {\n          this.color = \"warning\";\n           break; \n        } \n        case (this.usersrating>0): { \n          this.color = \"danger\";\n           break; \n        } \n        default: { \n           //statements; \n           break; \n        }\n     }\n     });\n  }\n\n  countStar(star) {\n    console.log(\"text value \" +this.textValue);\n    if(typeof this.textValue  === 'undefined'){ \n      console.log(\"entra\" );\n      this.starService.setStar(this.iduser[0], this.idalbum[0], star);\n    }else{\n      this.starService.setReview(this.iduser[0], this.idalbum[0], star, this.textValue);\n    }\n\n    // Swal.fire({\n    //   icon: 'success',\n    //   title: 'Your rating is saved',\n    //   text: star ,\n    //   //html: ' <i style=\"color:#ffd700;\" class=\"fa fa-star\"></i>',\n    //   showConfirmButton: true,\n    // })\n    this.selectedValue = star;\n    this.ngOnInit();\n    console.log('Value of star', star);\n  }\n\n\n\n  SaveComent(){\n    if(typeof this.textValue  === 'undefined'){ \n      document.getElementById('exampleModal').click();\n    }\n    this.starService.setReview(this.iduser[0], this.idalbum[0], this.selectedValue, this.textValue);\n    Swal.fire({\n      icon: 'success',\n      title: 'Your Review  is saved',\n      // text: star ,\n      //html: ' <i style=\"color:#ffd700;\" class=\"fa fa-star\"></i>',\n      showConfirmButton: true,\n    })\n    document.getElementById('exampleModal').click();\n  }\n\n\n\n}\n","<div class=\"card text-center\">\n    <div class=\"card-header\">\n\n    </div>\n    <div class=\"card-body\">\n        <h6 class=\"card-title\">USERS RATINGS</h6>\n        <div [ngSwitch]=\"color\">\n            <div *ngSwitchCase=\"'light'\">\n                <h1><span class=\"badge badge-light\">{{usersrating | number : '1.2-2'}}</span></h1>\n            </div>\n            <div *ngSwitchCase=\"'success'\">\n                <h1><span class=\"badge badge-success\">{{usersrating | number : '1.2-2'}}</span></h1>\n            </div>\n            <div *ngSwitchCase=\"'warning'\">\n                <h1><span class=\"badge badge-warning\">{{usersrating | number : '1.2-2'}}</span></h1>\n            </div>\n            <div *ngSwitchCase=\"'danger'\">\n                <h1><span class=\"badge badge-danger\">{{usersrating | number : '1.2-2'}}</span></h1>\n            </div>\n        </div>\n        <!-- <h1><span class=\"badge badge-light\">{{usersrating}}</span></h1> -->\n        <hr>\n        <h6 class=\"card-title\">YOUR RATING</h6>\n        <div class=\"\" *ngIf=\"value\">\n            <h3><span class=\"badge badge-light\">{{value[0].value}} <i *ngIf=\"value\" style=\"color: #ffd700;\" class=\"fa fa-star\"></i></span></h3>\n        </div>\n\n        <!-- Button trigger modal -->\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n    Add Review\n  </button>\n\n        <!-- VENTANA MODAL-->\n        <div #exampleModal class=\"modal fade bd-example-modal-lg\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{this.idalbum[0]}}</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <div class=\"row\">\n                            <div class=\"col-md-5\">\n\n                                <img [src]=\"portada| noimage\" alt=\"...\" class=\"img-thumbnail\">\n                            </div>\n                            <div class=\"col-md-7\">\n                                <br> <br>\n                                <div class=\"\" *ngIf=\"value\">\n                                    <h4><span class=\"badge badge-light\">{{value[0].value}} <i *ngIf=\"value\" style=\"color: #ffd700;\" class=\"fa fa-star\"></i></span></h4>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-12\">\n                                        <ul class=\"list-inline rating-list\" *ngFor=\"let star of stars\" style=\"display: inline-block\">\n                                            <li (click)=\"countStar(star)\" [ngClass]=\"{'selected': (star <= selectedValue)}\">\n                                                <i style=\"cursor:pointer\" class=\"fa fa-star\"></i>\n                                            </li>\n                                        </ul>\n                                    </div>\n\n\n                                </div>\n\n                                <div class=\"col-md-12 \">\n                                    <div class=\"widget-area no-padding blank\">\n                                        <div class=\"status-upload\">\n                                            <form>\n                                                <textarea class=\"form-control\" name=\"textValue\" [(ngModel)]=\"textValue\" placeholder=\"{{textValue}}\" rows=\"3\"></textarea>\n                                                <br>\n\n                                                <div class=\"clearfix\"></div>\n                                            </form>\n                                        </div>\n                                        <!-- Status Upload  -->\n                                    </div>\n                                    <!-- Widget Area -->\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" #closeAddExpenseModal>Close</button>\n                        <button type=\"button\" (click)=\"SaveComent()\" class=\"btn btn-primary pull-right\"><i class=\"far fa-save\"></i> Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted\">\n\n    </div>\n</div>","import { Directive, ElementRef,  Input, Output, HostListener, EventEmitter} from '@angular/core';\nimport { FileItem } from 'src/app/models/file-item.model';\n// import { FORMERR } from 'dns';\n//import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n//import { runInThisContext } from 'vm';\n\n\n@Directive({\n  selector: '[appNgDropFiles]'\n})\nexport class NgDropFilesDirective {\n\n  constructor() { }\n  @Input() imagen: FileItem;\n  @Input() archivos: FileItem[] = [];\n  @Input() i: string;\n  @Output() mouseSobre: EventEmitter<boolean> = new EventEmitter();\n\n  @HostListener('dragover', ['$event'])\n  public onDragEnter( event: any){\n   this.mouseSobre.emit(true);\n   this._prevenirDetener( event);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  public onDragLeave( event: any){\n   this.mouseSobre.emit(false);\n  }\n\n  @HostListener('drop', ['$event'])\n  public onDrop( event: any){\n   this.mouseSobre.emit(false);\n   const transferencia = this._getTransferencia(event);\n   if(!transferencia){\n     return;\n   }\n   this.imagen = transferencia.files[0];\n   this._extraerArchivos(transferencia.files);\n   this._prevenirDetener( event);\n   this.mouseSobre.emit(false);\n\n  }\n\n  private _getTransferencia( event: any){\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n\n  } \n\n  private _extraerArchivos( img: FileList){\n    //this.archivos = [];\n    console.log( img);\n    this.i = 'cambia';\n    // tslint:disable-next-line: forin\n    // this.imagen = img;\n     // tslint:disable-next-line: forin\n     // tslint:disable-next-line: one-line\n     // tslint:disable-next-line: forin\n    for ( const propiedad in Object.getOwnPropertyNames(img)){\n           const archivoTemporal = img[propiedad];\n          if ( this._archivoPuedeSerCargado(archivoTemporal)) {\n           const nuevoArchivo = new FileItem(archivoTemporal);\n          //  this.archivos.unshift(nuevoArchivo);\n           this.archivos[0] = nuevoArchivo;\n            }\n       }\n  }\n\n\n\n  //VALIDACIONES\n  private _archivoPuedeSerCargado( archivo: File): boolean{\n      if( !this._archivoyadroppeado( archivo.name ) && this._esImagen(archivo.type)){\n        return true;\n\n      }else{\n        return false;\n      }\n\n  }\n\n\n  private _prevenirDetener( event){\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private _archivoyadroppeado(nombreArchivo: string): boolean{\n    for( const imag of [this.imagen]) { \n      if (imag.nombreArchivo == nombreArchivo) {\n        console.log(\"YA EXISTE\")\n        return true;\n      }\n    }\n\n    return false;\n\n  }\n\n  private _esImagen( tipoArchivo: string): boolean{\n  return ( tipoArchivo ==='' || tipoArchivo === undefined )? false : tipoArchivo.startsWith('image');\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService,\n              private router: Router) {}\n  canActivate(): Observable<boolean >| Promise<boolean >| boolean{\n    // console.log(this.auth.estaAutenticado());\n\n     if (this.auth.estaAutenticado()){\n       return true;\n     }\n     else{\n        this.router.navigateByUrl('/login');\n     }\n  }\n}\n","export class  FileItem{\r\n    public archivo: File;\r\n    public nombreArchivo: string;\r\n    public url: string;\r\n    public progreso: number;\r\n    constructor( archivo: File){\r\n        this.archivo = archivo;\r\n        this.nombreArchivo = archivo.name;\r\n\r\n}\r\n}","   export class UsuarioModel{\r\n\r\n    email: string;\r\n    password: string;\r\n    nombre: string;\r\n    uid: string;\r\n    estado: boolean;\r\n }","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer  } from '@angular/platform-browser';\n\n\n@Pipe({\n  name: 'domseguro'\n})\nexport class DomseguroPipe implements PipeTransform {\n\n  constructor( private domSanitizer:DomSanitizer ){ }\n\n  transform( value: string, url: string): any {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl( url + value );\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'noimage'\n})\nexport class NoimagePipe implements PipeTransform {\n\n  transform( images: any[] ): string{\n\n    if(!images){\n\n      return 'assets/img/noimage.png';\n    }\n\n    if(images.length >0){\n   \n      return images[0].url;\n    } else{\n      return 'assets/img/noimage.png';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument, AngularFirestoreCollection} from '@angular/fire/firestore';\nimport { auth } from 'firebase/app';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { UsuarioModel } from '../models/usuario.model';\nimport { UserModel } from '../models/user.model';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as firebase from 'firebase';\nimport { FileItem } from '../models/file-item.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  userToken: string;\n  uidToken: string;\n  public isLogged: boolean = false;\n  private url = 'https://identitytoolkit.googleapis.com/v1/accounts';\n  // Clave proyecto FIREBASE\n  private apikey = 'AIzaSyCBqUly4UA91mi2Cey1jhhN2eZagTohxnQ';\n\n  private curl = 'https://letterboxmusic-79a52.firebaseio.com';\n\n  private CARPETA_IMAGENES = 'img';\n\n\n  // CREAR NUEVOS USERS\n  // https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n\n  // Login\n  // https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]\n\n  // private currentUserSubject: BehaviorSubject<UsuarioModel>;\n  // public currentUser: Observable<UsuarioModel>;\n  public usucurrent: any;\n\n  user$: Observable<any>;\n \n\n  constructor(public afAuth: AngularFireAuth,\n              private afs: AngularFirestore,\n              private router: Router,\n              private http: HttpClient) {\n                this.leerToken();\n                this.getCurrentUserio();\n                // this.currentUserSubject = new BehaviorSubject<UsuarioModel>(JSON.parse(localStorage.getItem('currentUser')));\n                // this.currentUser = this.currentUserSubject.asObservable();\n                this.usersCollection = this.afs.collection<UserModel>('Users');\n                \n                this.users = this.usersCollection.valueChanges();\n                //this.observador();\n                \n  }\n  private usersCollection: AngularFirestoreCollection<UserModel>;\n  private users: Observable<UserModel[]>;\n  userDoc: any;\n\n  saveimg( imagenes: FileItem[]){\n      console.log(  imagenes);\n      console.log(this.usucurrent.uid);\n      const storageRef = firebase.storage().ref();\n      for ( const item of imagenes ) {\n        // item.estaSubiendo = true;\n        // if ( item.progreso >= 100 ) {\n        //   continue;\n        // }\n        const uploadTask: firebase.storage.UploadTask =\n                    storageRef.child(`${ this.CARPETA_IMAGENES }/${ item.nombreArchivo }`)\n                              .put( item.archivo );\n        uploadTask.on( firebase.storage.TaskEvent.STATE_CHANGED,\n          ( snapshot: firebase.storage.UploadTaskSnapshot ) =>\n          item.progreso = ( snapshot.bytesTransferred / snapshot.totalBytes ) * 100,\n                ( error ) => console.error('Error al subir', error ),\n                () => {\n                  console.log('Imagen cargada correctamente nombre' + item.nombreArchivo);\n\n                  uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                    const imageUrl = downloadURL;\n                    console.log('URL:' + imageUrl);\n                    this.guardarImage({\n                      nombre: item.nombreArchivo,\n                      url: imageUrl \n                    });\n                  });\n                  });\n\n                  // item.url = uploadTask.snapshot.downloadURL;\n                  // console.log(\"URL\"+ uploadTask.snapshot.downloadURL);\n                \n  \n      }\n\n  }\n\n  guardarImage(image: {nombre: string, url: string}){\n\n    //const usu = this.getUserfirebase(\"qwd23e23\");\n   //console.log(\"LLEGA\");\n    //console.log(image.url);\n    const starsRef =  this.afs.collection('Users').doc(this.usucurrent.uid).update({ nombre: 'jack', photo: image.url });\n    //return starsRef.valueChanges();\n  }\n\n  getallusers(){\n    return this.users;\n  }\n\n  // getusercurrent(){\n  //   this.userDoc = this.afs.collection<UserModel>('Users', ref => ref.where('UID', '==', uid));\n  // }\n\n   getCurrentUserio() {\n   return this.isAuth().subscribe(user =>{\n      if(user){\n        this.usucurrent = user;\n      }\n    });\n  }\n\n\n  getUserfirebase(uid){\n    const starsRef = this.afs.collection('Users', ref => ref.where('uid', '==', uid));\n    return starsRef.valueChanges();\n  }\n\n\n  login( usuario: UsuarioModel){\n    const authData  = {\n      ...usuario,\n      returnSecureToken: true\n    };\n    this.afAuth.auth.signInWithEmailAndPassword(authData.email, authData.password);\n    return this.http.post(\n         `${ this.url }:signInWithPassword?key=${ this.apikey }`,\n         authData\n       ).pipe(\n         map( resp => {\n           //this.observador();\n          // localStorage.setItem('currentUser', JSON.stringify(resp));\n           this.guardarToken( resp['idToken'], resp['localId']);\n           return resp;\n         })\n       );\n  }\n\n  loginGoogle() {\n    this.isAuth().subscribe( (data: any) => {\n      console.log(data);\n    });\n    return this.afAuth.auth.signInWithRedirect(new auth.GoogleAuthProvider()).then((res) =>{\n      console.log(res);\n      this.guardarToken( res['idToken'], res['localId']);\n    \n      return res;\n      }).catch(err => console.log('err', err));;\n    \n}\n\n  newUser(usuario: UsuarioModel){\n    const authData  = {\n      ...usuario,\n      returnSecureToken: true\n    };\n\n    return this.http.post(\n      `${ this.url }:signUp?key=${ this.apikey }`,\n      authData\n     ).pipe(\n       map( resp => {\n         this.guardarToken( resp['idToken'],resp['localId']);\n         console.log(\"Respuesta \"+ JSON.stringify(resp));\n         usuario.uid = resp['localId'];\n         this.PostUser(usuario);\n         return resp;\n       })\n    );\n  }\n\n  PostUser(usuario: UsuarioModel){\n    return this.afs.collection('Users').doc(this.usucurrent.uid).update({ usuario });\n    \n  }\n\n\n  async googleSignin(){\n    const provider = new auth.GoogleAuthProvider();\n    const credential = await this.afAuth.auth.signInWithPopup(provider);\n    return this.updateUserData(credential.user);\n  }\n  async SignOut(){\n   await this.afAuth.auth.signOut();\n   return this.router.navigateByUrl('/login');\n\n  }\n \n\n  updateUserData(user) {\n    //const userRef: AngularFirestoreDocument<User> = this.db.collection('Users').doc(user.uid)\n    console.log(\"Usuario\" +  JSON.stringify(user));\n      return this.afs.collection('Users').doc(this.usucurrent.uid).update({\n      nombre: user.nombre,\n      email: user.email,\n    \n });\n  }\n\n  logout_() {\n    this.afAuth.auth.signOut();\n    localStorage.removeItem('token');\n    localStorage.removeItem('uid');\n  }\n\n  private guardarToken( idToken: string, localId: string){\n    this.userToken = idToken;\n    localStorage.setItem('token', idToken);\n    localStorage.setItem('uid', localId);\n    let hoy = new Date();\n    hoy.setSeconds( 3600 );\n    localStorage.setItem('expira', hoy.getTime().toString());\n  }\n  leerToken(){\n    if ( localStorage.getItem('token')){\n      this.userToken = localStorage.getItem('token');\n    } else {\n      this.userToken = ' ';\n    }\n    return this.userToken;\n  }\n\n  estaAutenticado(): boolean{\n   if ( this.userToken.length < 2){\n     return false;\n   }\n   const expira = Number(localStorage.getItem('expira'));\n   const expiraDate = new Date();\n   expiraDate.setTime(expira);\n   if (expiraDate > new Date()){\n    return true;\n  } else{\n    return false;\n  }\n  }\n\n  estaokk(): boolean {\n    console.log(\"USERTOKEN\"+ this.userToken.length );\n\n    if ( this.userToken.length < 2){\n      return false;\n    }\n    const expira = Number(localStorage.getItem('expira'));\n    const expiraDate = new Date();\n    expiraDate.setTime(expira);\n    if (expiraDate > new Date()){\n     return true;\n   } else{\n     return false;\n   }\n   \n  }\n\n  isAuth(){\n    //return this.user$;\n    return this.afAuth.authState.pipe(map(auth => auth));\n  }\n\n  observador(){\n    this.afAuth.auth.onAuthStateChanged(function(user) {\n\n      if (user) {\n        // this.guardarToken( user['idToken'], user['localId']);\n        console.log(\"USEEEEEER OBSERVADOR: \" + JSON.stringify(user));\n        var displayName = user.displayName;\n        var email = user.email;\n        var emailVerified = user.emailVerified;\n        var photoURL = user.photoURL;\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n        var providerData = user.providerData;\n\n      } else {\n        console.log(\"NO HAY USUARIO\");\n      }\n    });\n  }\n\n  getCurrentUser(){\n    this.isAuth().subscribe(auth => {\n       if(auth){\n        this.isLogged = true;\n       } else{\n        this.isLogged = false;\n       }\n\n      })\n}\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n  \n  constructor( private http: HttpClient) {\n    // this.getToken();\n    this.obtenerToken();\n    console.log('spoti listo');\n    // const express = require('express');\n    // const request = require('request');\n    // const path = require('path');\n    // const appp = express();\n  }\n  clientid: '3bff61ab6dc846b89fced913eeab7010';\n  clientsecret: '3a07ce82828b462493931ad57f278d2b';\n   tooken: any;\n\n   obtenerToken(){\n    const clientId=`3bff61ab6dc846b89fced913eeab7010`;\n    const clientSecret=`3a07ce82828b462493931ad57f278d2b`;\n    const urrl=`https://spotiapp-backend.herokuapp.com/spotify/${clientId}/${clientSecret}`;\n    this.http.get(urrl).subscribe( (data: any) => {\n       console.log(data);\n       this.tooken = data.access_token;\n     });\n  }\n  \n   getQuery( query: string){\n     const url = `https://api.spotify.com/v1/${ query }`;\n     const headers = new HttpHeaders ({\n       'Authorization': `Bearer ${this.tooken}`\n     });\n     return this.http.get(url, { headers});\n   }\n\n   getNewReleases() {\n      return this.getQuery('browse/new-releases?limit=48')\n         .pipe( map( data => data['albums'].items));\n\n  }\n   // Buscador de Artistas\n  getArtistas(termino: string){\n     return this.getQuery(`search?q=${termino}&type=artist&limit=10`)\n     .pipe( map( data =>  data['artists'].items));\n   }\n  // // Buscador de albums\n   getAlbums(termino: string){\n     return this.getQuery(`search?q=${termino}&type=album`).pipe( map( data => data['albums'].items));\n   }\n\n   getAlbumTracks(id: string){\n     return this.getQuery(`albums?ids=${id}`).pipe( map( data => data['albums']));\n   }\n   getArtista( id: string){\n     return this.getQuery(`artists/${ id }`);\n     //.pipe( map( data =>  data['artists'].items));\n   }\n\n   // Las Top Tracks de Un Artista\n   getTopTracks( id: string){\n     return this.getQuery(`artists/${id}/top-tracks?country=us`);\n     // .pipe( map( data =>  data['artists'].items));\n   }\n\n  // Todos los albums de un Artista\n   getAlbumsArtista( id: string){\n     return this.getQuery(`artists/${id}/albums?include_groups=album&market=us`);\n   }\n   getSinglesArtista( id: string){\n     return this.getQuery(`artists/${id}/albums?include_groups=single&market=us`);\n   }\n\n\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { auth } from 'firebase/app';\n\nexport interface Star {\n  userId: any;\n  albumId: any;\n  value: number;\n  date: any;\n}\nexport interface Star2 {\n  userId: any;\n  albumId: any;\n  value: number;\n  coment: any;\n  date: any;\n}\n\n \n \n@Injectable({\n  providedIn: 'root'\n})\nexport class StarService {\n  fecha: Date =  new Date();\n\n  constructor(private afs: AngularFirestore) { }\n\n  // devuelve el rating de ese User sobre ese Album\n  getUserAlbumStarr(userId,albumId){\n    const starsRef = this.afs.collection('stars', ref => ref.where('userId', '==', userId).where('albumId', '==', albumId));\n    return starsRef.valueChanges();\n  }\n  getRecentStars(userId){\n    const starsRef = this.afs.collection('stars', ref => ref.where('userId', '==', userId).orderBy(\"date\",\"desc\").limit(5));\n    return starsRef.valueChanges();\n  }\n// devuelve el rating sobre ese Album\n  getAllStarAlbum(albumId){\n    const starsRef = this.afs.collection('stars', ref => ref.where('albumId', '==', albumId));\n    return starsRef.valueChanges();\n  }\n\n  getComentUsers(){\n\n  }\n\n  //Añadir rating de star de un album\n  setStar(userId, albumId, value){\n    // today = Date.now();\n    // this.date = new Date().toLocaleDateString();\n    var date =  new Date();\n    const star: Star = {userId, albumId, value,date};\n    const starPath = `stars/${star.userId}_${star.albumId}`;\n    //db.collection('Users').doc(user.uid).set({\n     this.afs.doc(starPath).set(star);\n  }\n  \n//Review  a un album\nsetReview(userId, albumId, value, coment){\n  var date =  new Date();\n  const star: Star2 = {userId, albumId, value, date,coment};\n  const starPath = `stars/${star.userId}_${star.albumId}`;\n  //db.collection('Users').doc(user.uid).set({\n   this.afs.doc(starPath).set(star);\n}\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCBqUly4UA91mi2Cey1jhhN2eZagTohxnQ',\n    authDomain: 'letterboxmusic-79a52.firebaseapp.com',\n    databaseURL: 'https://letterboxmusic-79a52.firebaseio.com',\n    projectId: 'letterboxmusic-79a52',\n    storageBucket: 'letterboxmusic-79a52.appspot.com',\n    messagingSenderId: '9648060872',\n    appId: '1:9648060872:web:2e07d914863683a29368fd',\n    measurementId: 'G-S69G8GED2E'\n  }\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}